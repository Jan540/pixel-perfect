import { Button, Flex, VStack, Container, Text } from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { FC, useContext } from "react";
//import { Typewriter, useTypewriter, Cursor } from "react-simple-typewriter";
import { quotes } from "../data/quotes";
import Typewriter from "typewriter-effect";
import { useMutation } from "@apollo/client";
import UPLOAD_PRFPIC from "../graphql/mutations/uploadProfilePicture";
import { UserContext } from "../lib/User/Usercontext";
import { getAccessToken } from "../lib/User/acesstoken";

const Home: NextPage = () => {
  //const { user, setUser } = useContext(UserContext);
  // const client = ...
  const [uploadProfilePicture, { data, error, loading }] =
    useMutation(UPLOAD_PRFPIC);
  const UploadPFPIC: FC = () => {
    const onChange = async ({
      target: {
        validity,
        files: [file],
      },
    }: any) => {
      try {
        if (validity.valid) {
          await uploadProfilePicture({
            variables: {
              input: { file },
            },
          });
        }
      } catch {
        return false;
      }
    };

    return <input type="file" required onChange={onChange} />;
  };

  return (
    <Flex height="100vh" justifyContent="center">
      <Head>
        <title>Place</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <VStack>
        <VStack height="100vh" justifyContent="center">
          <Container fontSize="5xl">
            <Typewriter
              options={{
                strings: quotes,
                autoStart: true,
                loop: true,
                deleteSpeed: 25,
                delay: 55,
              }}
            />
          </Container>
          <UploadPFPIC />
          {error && <Text color={"red"}>{error.message}</Text>};
          {loading && <Text>loading...</Text>}
        </VStack>

        <VStack height="100vh">
          (
          <>
            <Link href="/publicPlace">
              <Button bgColor={"blue.400"} size="lg" width="100%">
                Public Place
              </Button>
            </Link>
            <Link href="/privatePlace">
              <Button bgColor={"pink.500"} size="lg" width="100%">
                Private Place
              </Button>
            </Link>
          </>
          )
        </VStack>
      </VStack>
    </Flex>
  );
};

export default Home;
